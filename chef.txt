Chef
- keeping current stat of the  machine
- pull model than push modle
- AWS opsworks

what is chef
- chef is automation platform for dev and system  eng to  define , build and  manager infra
- infra as a code
	programatically provision and configure
	treat like any other codebase
	reconstruct business from code repo , data back up and bare matel resources
	learning chef is like basics of language


way of running chef
	hosted chef
	chef as a service
	you pay as you use
	
	in house chef
	free when using free version no support
AWS opsworks
	free to configure ec2
	if you are AWS customer  

chef terminology
	organization
	env
	roles
	nodes
	recipes
	cookbooks
	search


Organizatino
	completely inde tenant
	share nothing
	differrent business unit/org
	
	three environmetn
		qa
		staging
		prod

	environent policy may include data attributes
	locatin of the packkage
	version of the config files



Introduction
	node is servers 
	can be physical or virutual
	each belongs to one env in one organization' each node has zero or more roles


roles
	represent type of server
	db
	vpn
	app
	monitring

	role include
		list of chef config 
		vpn may include openvpn run list

	data attribute
		variable
		ip
		port other


chef client
	app  runs on each node
	gathers the  current  configuration
	downloads chef server (30 min)
	configures every; node state mathces policy desc chef server
	client pulls master info


node config
	chef ensures each complies with plicychef client will pull from server and enforce policy on that node
	policy des each resoucxce should be in
	goal to red management 
	infra as code and store in VCS


resource
	represents piece off desired state
	eample	
		package needs to be installed
		service needs to be running
		user need to be  present
		task
	building block of  chef
	resouce are included in recipes
	recipe  ensure that the system  is in desiired state

	recipes like playbook in ansible



recipes
	recipes are config file  resources and desired state
	to install, manage  config
	deploy app  and depends on other  recipes


	example
		install and start nginx
	
	uses and  existing recipe apt 
		apt - install packkage
		
cookbook
	recipies are stored in cookbooks
	recipes , templates, files ,  custom reorces
	provides codes to be reused and modularity
	cookbooks can be shared  and downloaded from a market place
	lot of  cook  books are availlable  for  exisiting  softwares
	craete on existing cookbooks - customize it


search
	search for node with roles
	find topology dat ip , host , domain name
	
configuratoin drift
	infra changes 
	configuratni falls out of policy
	new req in chef config files
	chef client picks the changes
	new policy enforced


knife
	command  line tool chef  client  and  server

spin up a new machine
 
install  chef development  toolkit
dpkg -i

sudo su -

knife needs to be setup  first
create ~/.chef/knife.rb config file

cookboookk path
once start chef serveror hosted  chef  autogenerated and  downloaded

first cookbook
mycookbook
	chef generate cookbook my_cookboook
	

edit the  metadata 
default.rb contains the default html directory .. and nginx

applying locally --


chef-client -z -runlist 'recipe(my_cookbook)'

cookbook only runs locally 

easy way to test cookbooks

package the  recipes - initalie berks

berks init
echo 'cookbook "apt" 

berks vendor
ls berks cookbooks

below command is used to fetch the ssl from the chef server
189  knife ssl fetch


add this to your .chef/knife.db

current_dir = File.dirname(__FILE__)
log_level                :info
log_location             STDOUT
node_name                "admin"
client_key               "/home/vagrant/admin.pem"
validation_client_name   "learndevops-validator"
validation_key           "/home/vagrant/org.pem"
chef_server_url          "https://chefserver.example.com/organizations/learndevops"
cookbook_path            ["/home/vagrant/cookbooks"]


pllease make sure that you have the  chefserver resolved in the /etc/hosts 

  191  knife client list
this will validate the connectivity from the client to serve
  192  knife ssl check
will check the ssl certificate with the /etc/host entry FDQN necessary



  196  knife ssl check

to check the client list add this

  197  knife client list
  198  cd ..
  199  cd cookbooks
  200  ls

this will upload the cookbooks to the chef server please do in the dependancy order
  201  knife cookbook upload apt
  202  knife cookbook upload compat_resource
  203  knife cookbook upload apt
  204  knife cookbook upload my_cookbook

you can use this to add the recipe for the ndoe in the run list

  205  kinfe node run_list set node 'recipe[my_cookbook]'
  206  knife node run_list set node 'recipe[my_cookbook]'

below command will bootstrap the below node to the chef server with user vagrant and with sudo 
  207  knife bootstrap node.example.com -N node -x vagrant --sudo
  221  knife bootstrap node.example.com -N node -x vagrant --sudo

below will add the my_cookbook to be run at the node of the  node

  222  knife node run_list set node 'recipe[my_cookbook]'
  223  ssh node 'sudo chef-client'
will ssh connect to the sudo chef client

test weather the nginx is iinstalled or not
  224  curl node
  225  cd ..
  226  ls
  227  cd cookbooks
  228  ls

now add the roles.json, attribute and template to the recipe and re run
  229  cp /vagrant/chef-demo/misc/webserver-role.json .
  230  cp /vagrant/chef-demo/attributes/ my_cookbook/ -r
  231  cp /vagrant/chef-demo/templates/ my_cookbook/ -r
  232  cp /vagrant/chef-demo/recipes/default.rb my_cookbook/recipes/
  233  cat my_cookbook/recipes/default.rb
  234  cat my_cookbook/templates/default/nginx.conf.erb
  235  cat my_cookbook/attributes/default.rb
  236  vim my_cookbook/metadata.rb
upload cookbook to chef server, role ,and add the  role to the  node 
  237  knife upload cookbook my_cookbook
  238  knife role from file webserver-role.json
  239  knife node run_list set node 'role[webserver]'
add the node to the ssh
  240  ssh node 'sudo chef-client'


	
		
	
	